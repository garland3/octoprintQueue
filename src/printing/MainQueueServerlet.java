package printing;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import javax.servlet.ServletException;
import javax.servlet.http.*;

import org.json.simple.*;

import beans.FileURLAndName;
import beans.QueueBean;

@SuppressWarnings("serial")
public class MainQueueServerlet extends HttpServlet {
	public void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws IOException, ServletException {
		
		
		HttpSession session = req.getSession();
		Logger log = Logger.getLogger(dbwrapper.class.getName());
		log.info("Main Queue Serverlet");
		
		/*
		 * Make sure the api key is ok
		 */
		if(ConnectionParams.XapiKey.equals("")){
			ConnectionParams.GetKeyFromFile(this,resp);
		}
		
		
		/**
		 * Get the bean from the session, or create a new one. 
		 * The bean holds the data generated by the serverlet and sent to the jsp page
		 */
		QueueBean queB = (QueueBean) session.getAttribute("queB");
		if(queB == null){
			queB = new QueueBean();
		}
		
		/**
		 * Check to see if a button was clicked to Print a model
		 */
		String id = req.getParameter("id");
		String action = req.getParameter("action");
		log.info("Info From Potential Button click\nid: "+id+ " action: "+action+"\n");
		
		// Begin adding to the queue if they are not null
		if(action!= null && id!=null){
			
			/*
			 * Get the filename, and api url for this given "id" from the list apiFileUrlList
			 * Send a command to the update mananger which will
			 * - update the DB
			 * - Send the command to Octoprint **** Actually DO NOT just send octoprint commands. 
			 * --- Make the user always click "NEXT" Dont' assume it is ok to print just because nothing is printing
			 */
			FileURLAndName f = queB.getFileURLAndNameUsingID(Integer.parseInt(id));
			if(f!=null){
				
				dbwrapper d;
				try {
					d = new dbwrapper();
					d.AddFileToPrintQueueTable(f);
				} catch (SQLException e) {
					queB.setErrorFlag(1);
					queB.mainMessage = "An Error has occured\n SQL Exception";
				
				}
			
			}
		}
		
		/**
		 * Get the current printing queue list form teh db
		 * 
		 * Put the data into the queueBean
		 */		
		try {
			dbwrapper d = new dbwrapper();
			queB.queuedFileList = d.GetQueuedFileList();
		} catch (SQLException e1) {
			
			e1.printStackTrace();
			queB.setErrorFlag(1);
			queB.mainMessage = "An Error has occured\n SQL Exception";
		}
		
    
		
		
		/**
		 * Get a list of avaiable files to print on the Octoprint server
		 * 
		 * Refresh the list of files on the server
		 */
		
		// First delete the old list, then get a new list by calling the server
		queB.apiFileUrlList.clear();
		OctoprintCalls  o = new OctoprintCalls(); 
		JSONObject responseJson =  o.GetFileList(); // Call octoprint and then handle the response
		log.info(responseJson.toJSONString());
	
		List<String> list = new ArrayList<String>();		
		
		if(responseJson!=null){
	
				JSONArray files = (JSONArray) responseJson.get("files");
				if(files!=null){
					for (int i = 1; i<files.size();i++){
						JSONObject o2 =(JSONObject) files.get(i);
						if(o2!=null){
							//log.info("\n-- Each object, o2 --" +o2.toJSONString());
							
							JSONObject o3 = (JSONObject)o2.get("refs");
							if (o3!=null){
								//log.info("\n== ref, o3 ==" + o3.toJSONString());
								
								String o4 = (String)o3 .get("resource");
								//log.info("\n== string , o4 ==" + o4);
								if(o4!=null){
									String result =o4;
									log.info(result);	
								    list.add(result);
								} else{
									queB.setErrorFlag(1);
									queB.mainMessage = "Unable to get list of files from Octoprint 5 - Could not extract string";
								}
							} else{
								queB.setErrorFlag(1);
								queB.mainMessage = "Unable to get list of files from Octoprint 4 - Could not get refs";
							}
						} else {
							queB.setErrorFlag(1);
							queB.mainMessage = "Unable to get list of files from Octoprint 3 - Could not extract file list" ;
						}
				
					}
				} else {
					queB.setErrorFlag(1);
					queB.mainMessage = "Unable to get list of files from Octoprint 2";
				}
		
			
			// Send the list form the json array to the Java bean
			queB.setApiFileUrlList(list);
			String listString = list.toString();
			log.info(listString);
		}  else {
			queB.setErrorFlag(1);
			queB.mainMessage = "Unable to get list of files from Octoprint 1";
		}
		
		if(queB.getErrorFlag()== 0){
			queB.mainMessage ="Welcome to the 3D printer print job queueing system";
		}
		
		session.setAttribute("queB", queB); // Add the queuebean
		req.getRequestDispatcher("/jsp/queueone2.jsp").forward(req, resp); // forward on to the jsp page
	}
	

	
}
